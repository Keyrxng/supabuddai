schema_name,table_name,policy_name,condition_test,expected_result
"public","mockup_requests","Enable insert for authenticated users only","Policy condition is always true","pass"
"public","mockup_requests","Enable insert for users based on user_id","undefined","pass"
"public","mockup_requests","Enable read access for all users","auth.uid() equals specified user_id","pass"
"public","mockup_requests","Enable read access for all users","auth.uid() does not equal specified user_id","fail"
"public","mockup_requests","Enable update for users based on email","undefined","pass"
"public","mockup_requests","Enable update for users based on email","undefined","fail"
"public","mockup_requests","Enable update for users based on email","auth.uid() equals specified user_id","pass"
"public","mockup_requests","Enable update for users based on email","auth.uid() does not equal specified user_id","fail"
"public","mockups","Enable delete for users based on user_id","auth.uid() equals specified user_id","pass"
"public","mockups","Enable delete for users based on user_id","auth.uid() does not equal specified user_id","fail"
"public","mockups","Enable insert for users based on user_id","undefined","pass"
"public","mockups","Enable read access for all users","auth.uid() equals specified user_id","pass"
"public","mockups","Enable read access for all users","auth.uid() does not equal specified user_id","fail"
"public","mockups","Enable update for users based on email","undefined","pass"
"public","mockups","Enable update for users based on email","undefined","fail"
"public","mockups","Enable update for users based on email","auth.uid() equals specified user_id","pass"
"public","mockups","Enable update for users based on email","auth.uid() does not equal specified user_id","fail"
"public","orders","Enable insert for users based on user_id","undefined","pass"
"public","orders","Enable select for users based on user_id","auth.uid() equals specified user_id","pass"
"public","orders","Enable select for users based on user_id","auth.uid() does not equal specified user_id","fail"
"public","orders","Enable update for users based on email","undefined","pass"
"public","orders","Enable update for users based on email","undefined","fail"
"public","orders","Enable update for users based on email","auth.uid() equals specified user_id","pass"
"public","orders","Enable update for users based on email","auth.uid() does not equal specified user_id","fail"
"public","sales","Enable insert for users based on user_id","undefined","pass"
"public","subscriptions","Can only view own subs data.","auth.uid() equals specified user_id","pass"
"public","subscriptions","Can only view own subs data.","auth.uid() does not equal specified user_id","fail"
"public","uak","Enable insert for users based on user_id","undefined","pass"
"public","uak","Enable read access for all users","auth.uid() equals specified user_id","pass"
"public","uak","Enable read access for all users","auth.uid() does not equal specified user_id","fail"
"public","uak","Enable update for users based on email","undefined","pass"
"public","uak","Enable update for users based on email","undefined","fail"
"public","uak","Enable update for users based on email","auth.uid() equals specified user_id","pass"
"public","uak","Enable update for users based on email","auth.uid() does not equal specified user_id","fail"
"public","upgrades","Enable insert for users based on user_id","undefined","pass"
"public","upgrades","Enable read access for all users","auth.uid() equals specified user_id","pass"
"public","upgrades","Enable read access for all users","auth.uid() does not equal specified user_id","fail"
"public","usage_tiers","Enable read access for all users","Policy condition is always true","pass"
"public","user_actions","Enable insert for users based on user_id","undefined","pass"
"public","user_actions","Enable read access for all users","auth.uid() equals specified user_id","pass"
"public","user_actions","Enable read access for all users","auth.uid() does not equal specified user_id","fail"
"public","users","Can update own user data.","auth.uid() equals specified user_id","pass"
"public","users","Can update own user data.","auth.uid() does not equal specified user_id","fail"
"public","users","Can view own user data.","auth.uid() equals specified user_id","pass"
"public","users","Can view own user data.","auth.uid() does not equal specified user_id","fail"
"public","users","Enable insert for authenticated users only","undefined","pass"
"storage","buckets","Enable insert for authenticated users only","undefined","pass"
"storage","objects","Enable insert for authenticated users only","undefined","pass"
"storage","objects","Give users access to own folder lhe90e_0","undefined","pass"
"storage","objects","Give users access to own folder lhe90e_0","undefined","fail"
"storage","objects","Give users access to own folder lhe90e_1","auth.uid() equals specified user_id","pass"
"storage","objects","Give users access to own folder lhe90e_1","auth.uid() does not equal specified user_id","fail"
"storage","objects","Give users access to own folder lhe90e_2","auth.uid() equals specified user_id","pass"
"storage","objects","Give users access to own folder lhe90e_2","auth.uid() does not equal specified user_id","fail"
"storage","objects","Give users access to own folder lhe90e_3","auth.uid() equals specified user_id","pass"
"storage","objects","Give users access to own folder lhe90e_3","auth.uid() does not equal specified user_id","fail"
"storage","objects","Give users access to own hth lhe90e_0","undefined","pass"
"storage","objects","Give users access to own hth lhe90e_0","undefined","fail"
"storage","objects","Give users access to own hth lhe90e_1","auth.uid() equals specified user_id","pass"
"storage","objects","Give users access to own hth lhe90e_1","auth.uid() does not equal specified user_id","fail"
"storage","objects","Give users access to own hth lhe90e_2","auth.uid() equals specified user_id","pass"
"storage","objects","Give users access to own hth lhe90e_2","auth.uid() does not equal specified user_id","fail"
"storage","objects","Give users access to own hth lhe90e_3","auth.uid() equals specified user_id","pass"
"storage","objects","Give users access to own hth lhe90e_3","auth.uid() does not equal specified user_id","fail"